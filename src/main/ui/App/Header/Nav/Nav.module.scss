@import "src/common/ui/styles/base/variables";
$lightColor: $white-muted;
$darkColor: $theme-color;
$font-size: $font-size-sm;
$linkColor: #6c7784;

/* MAIN VARIABLES FOR CUSTOMIZATION */
$numOfItems: 6;
$navAT: 1s;
$textDelayStep: 0.1s;


/* -------------------------------- */

$btnSize: 60px;
$lineW: 28px;
$lineH: 4px;
$linesGap: 10px;
$linesTotalH: $lineH*2 + $linesGap;
$btnHorPad: ($btnSize - $lineW) / 2;
$btnVertPad: ($btnSize - $linesTotalH) / 2;
$itemsLeftPad: 20px;
$itemsRightPad: $itemsLeftPad + $btnSize;
$itemWidth: 80px;
$itemPad: 10px;
$navItemsWidth: $itemsLeftPad + $itemsRightPad + $itemWidth * $numOfItems;
$textAT: $navAT - $textDelayStep * ($numOfItems - 1);
$textFadeAT: 0.2s;
$cub: cubic-bezier(0.48, 0.43, 0.29, 1.3);
$backCub: cubic-bezier(0.49, -0.3, 0.68, 1.23);
$textCub: cubic-bezier(0.48, 0.43, 0.7, 2.5);

.nav {
  width: auto;
  height: $btnSize;
  overflow: hidden;

  background-color: $lightColor;
  border-radius: 5px;
  box-shadow: 0 10px 35px rgba(0, 0, 0, 0.2);

  &Control {
    position: absolute;
    z-index: -1000;
    top: 0;
    left: 0;

    opacity: 0;

    pointer-events: none;
  }

  &Content {
    position: relative;

    width: $btnSize;
    height: 100%;

    transition: width $navAT $backCub;

    &::before {
      content: "";
      position: absolute;
      z-index: 10;
      top: 0;
      right: 0;

      width: $btnSize;
      height: $btnSize;

      background-color: $lightColor;
    }

    .navControl:checked ~ & {
      width: $navItemsWidth;

      transition: width $navAT $cub;
    }
  }

  &Items {
    position: relative;

    width: $navItemsWidth;
    height: 100%;
    padding-right: $itemsRightPad;
    padding-left: $itemsLeftPad;

    list-style-type: none;
    font-size: 0;
  }

  &Item {
    display: inline-block;
    padding-right: $itemPad;
    padding-left: $itemPad;

    font-weight: bold;
    font-size: $font-size;
    line-height: $btnSize;
    font-family: $font-family;
    vertical-align: top;
    text-align: center;

    perspective: 1000px;
    cursor: pointer;

    &Link {
      display: block;
      height: 100%;

      color: $linkColor;
      text-decoration: none;

      opacity: 0;

      animation: linkRotate 1s $textCub 0s 1 reverse;

      .navControl:checked ~ .navContent & {
        opacity: 1;

        transition: color $textAT;
        animation: linkRotate 1s $textCub 0s 1;
      }

      @for $i from 1 through $numOfItems {
        .navItem:nth-child(#{$i}) & {
          animation-delay: ($numOfItems - $i) * $textDelayStep;
        }

        .navControl:checked ~ .navContent .navItem:nth-child(#{$i}) & {
          animation-delay: ($i - 1) * $textDelayStep;
        }
      }

      &Active {
        color: $darkColor;

        cursor: default;
      }

      &:focus {
        outline: none;
      }

      @media (hover: hover) {
        &:hover,
        &:focus {
          color: $darkColor;
        }

        &:active {
          color: lighten($darkColor, 10%);
        }
      }
    }
  }

  &Btn {
    position: absolute;
    z-index: 10;
    top: 0;
    right: 0;

    width: $btnSize;
    height: $btnSize;
    padding: $btnVertPad $btnHorPad;

    cursor: pointer;

    &:before,
    &:after {
      content: "";

      display: block;
      width: $lineW;
      height: $lineH;

      background-color: $darkColor;
      border-radius: 2px;
      transform-origin: 50% 50%;

      transition: transform $navAT $cub, background-color 0.3s;
    }

    &:before {
      margin-bottom: $linesGap;
    }

    &:hover {
      &:before,
      &:after {
        background: $darkColor;
      }
    }

    .navControl:checked ~ & {
      &:before {
        transform: translateY($linesGap/2 + $lineH/2) rotate(-225deg);
      }

      &:after {
        transform: translateY($linesGap/-2 + $lineH/-2) rotate(225deg);
      }
    }
  }
}


@keyframes linkRotate {
  from {
    transform: rotateY(-70deg);
    opacity: 0;
  }
  to {
    transform: rotateY(0);
    opacity: 1;
  }
}
